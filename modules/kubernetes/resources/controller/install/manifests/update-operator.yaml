apiVersion: v1
kind: Namespace
metadata:
  name: reboot-coordinator
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: reboot-coordinator
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - update
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - delete      
  - apiGroups:
      - "extensions"
    resources:
      - daemonsets
    verbs:
      - get
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: reboot-coordinator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: reboot-coordinator
subjects:
  - kind: ServiceAccount
    namespace: reboot-coordinator
    name: default
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: container-linux-update-agent
  namespace: reboot-coordinator
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: container-linux-update-agent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - name: update-agent
        image: ${update_operator_image}
        command:
        - "/bin/update-agent"
        volumeMounts:
          - mountPath: /var/run/dbus
            name: var-run-dbus
          - mountPath: /etc/coreos
            name: etc-coreos
          - mountPath: /usr/share/coreos
            name: usr-share-coreos
          - mountPath: /etc/os-release
            name: etc-os-release
        env:
        # read by update-agent as the node name to manage reboots for
        - name: UPDATE_AGENT_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      volumes:
      - name: var-run-dbus
        hostPath:
          path: /var/run/dbus
      - name: etc-coreos
        hostPath:
          path: /etc/coreos
      - name: usr-share-coreos
        hostPath:
          path: /usr/share/coreos
      - name: etc-os-release
        hostPath:
          path: /etc/os-release
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: container-linux-update-operator
  namespace: reboot-coordinator
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: container-linux-update-operator
    spec:
      nodeName: ${standalone_master_domain}
      containers:
      - name: update-operator
        image: ${update_operator_image}
        command:
        - "/bin/update-operator"
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
